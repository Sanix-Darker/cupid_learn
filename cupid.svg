<svg xmlns="http://www.w3.org/2000/svg" class="w-screen h-screen leading-none markmap mm-8yz4uo-1" style=""><style>.markmap{--markmap-max-width: none;--markmap-a-color: #0097e6;--markmap-a-hover-color: #00a8ff;--markmap-code-bg: #f0f0f0;--markmap-code-color: #555;--markmap-highlight-bg: #ffeaa7;--markmap-table-border: 1px solid currentColor;--markmap-font: 300 16px/20px sans-serif;--markmap-circle-open-bg: #fff;--markmap-text-color: #333;font:var(--markmap-font);color:var(--markmap-text-color)}.markmap-link{fill:none}.markmap-node&gt;circle{cursor:pointer}.markmap-foreign{display:inline-block}.markmap-foreign p{margin:0}.markmap-foreign a{color:var(--markmap-a-color)}.markmap-foreign a:hover{color:var(--markmap-a-hover-color)}.markmap-foreign code{padding:.25em;font-size:calc(1em - 2px);color:var(--markmap-code-color);background-color:var(--markmap-code-bg);border-radius:2px}.markmap-foreign pre{margin:0}.markmap-foreign pre&gt;code{display:block}.markmap-foreign del{text-decoration:line-through}.markmap-foreign em{font-style:italic}.markmap-foreign strong{font-weight:700}.markmap-foreign mark{background:var(--markmap-highlight-bg)}.markmap-foreign table,.markmap-foreign th,.markmap-foreign td{border-collapse:collapse;border:var(--markmap-table-border)}.markmap-foreign img{display:inline-block}.markmap-foreign svg{fill:currentColor}.markmap-foreign-testing-max{max-width:var(--markmap-max-width)}.markmap-foreign-testing-max img{max-width:var(--markmap-max-width);max-height:none}.markmap-dark .markmap{--markmap-code-bg: #1a1b26;--markmap-code-color: #ddd;--markmap-circle-open-bg: #444;--markmap-text-color: #eee}</style><style class="darkreader darkreader--sync" media="screen"></style><g transform="translate(-140.06795122272,342.53798929194943) scale(0.5026653667892389)"><path class="markmap-link" data-depth="2" data-path="1.2" d="M514,10C554,10,554,-335,594,-335" stroke="rgb(255, 127, 14)" stroke-width="1.5" style="--darkreader-inline-stroke: #ff8a23;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="2" data-path="1.6" d="M514,10C554,10,554,355,594,355" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #e376c1;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="3" data-path="1.2.3" d="M784,-335C824,-335,824,-335,864,-335" stroke="rgb(255, 127, 14)" stroke-width="1.5" style="--darkreader-inline-stroke: #ff8a23;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="3" data-path="1.6.7" d="M803,355C843,355,843,214.5,883,214.5" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #e376c1;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="3" data-path="1.6.8" d="M803,355C843,355,843,326.5,883,326.5" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #e376c1;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="3" data-path="1.6.9" d="M803,355C843,355,843,618.5,883,618.5" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #e376c1;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="3" data-path="1.6.10" d="M803,355C843,355,843,830.5,883,830.5" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #e376c1;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="3" data-path="1.6.11" d="M803,355C843,355,843,1002.5,883,1002.5" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #e376c1;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="4" data-path="1.2.3.4" d="M1005,-335C1045,-335,1045,-347.5,1085,-347.5" stroke="rgb(255, 127, 14)" stroke-width="1.5" style="--darkreader-inline-stroke: #ff8a23;" data-darkreader-inline-stroke=""></path><path class="markmap-link" data-depth="4" data-path="1.2.3.5" d="M1005,-335C1045,-335,1045,-322.5,1085,-322.5" stroke="rgb(255, 127, 14)" stroke-width="1.5" style="--darkreader-inline-stroke: #ff8a23;" data-darkreader-inline-stroke=""></path><g data-depth="4" data-path="1.2.3.5" transform="translate(1085, -342.5)" class="markmap-node"><line x1="-1" x2="643" y1="20" y2="20" stroke="rgb(255, 127, 14)" stroke-width="1.5" style="--darkreader-inline-stroke: #ae5200;" data-darkreader-inline-stroke=""></line><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="625" height="20"><div xmlns="http://www.w3.org/1999/xhtml">It emphasizes ideomatic design principles and domain-specific customization.</div></foreignObject></g><g data-depth="4" data-path="1.2.3.4" transform="translate(1085, -367.5)" class="markmap-node"><line x1="-1" x2="1266" y1="20" y2="20" stroke="rgb(255, 127, 14)" stroke-width="1.5" style="--darkreader-inline-stroke: #ae5200;" data-darkreader-inline-stroke=""></line><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="1248" height="20"><div xmlns="http://www.w3.org/1999/xhtml">CUPID (Composable Unix Predictable Ideomatic Domain base) is a framework for building Unix-based systems with predictable behavior and composability.</div></foreignObject></g><g data-depth="3" data-path="1.6.11" transform="translate(883, 835.5)" class="markmap-node"><line x1="-1" x2="1128" y1="167" y2="167" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #7d1a5f;" data-darkreader-inline-stroke=""></line><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="1110" height="167"><div xmlns="http://www.w3.org/1999/xhtml">
<p data-lines="76,77">Domain-specific Customization (Tailoring CUPID-based systems to specific use cases and domains for optimal performance and flexibility).</p>
<pre><code class="language-python"><span class="hljs-comment"># Example: Domain-specific Customization</span>
<span class="hljs-comment"># Customizing a web server component in a CUPID system</span>
<span class="hljs-keyword">import</span> cupid

web_server = cupid.WebServer()
web_server.configure(port=<span class="hljs-number">8080</span>, ssl=<span class="hljs-literal">True</span>)
web_server.start()
</code></pre></div></foreignObject></g><g data-depth="3" data-path="1.6.10" transform="translate(883, 623.5)" class="markmap-node"><line x1="-1" x2="956" y1="207" y2="207" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #7d1a5f;" data-darkreader-inline-stroke=""></line><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="938" height="207"><div xmlns="http://www.w3.org/1999/xhtml">
<p data-lines="63,64">Ideomatic Design (Embracing standard practices and conventions in Unix system design for clarity and consistency).</p>
<pre><code class="language-python"><span class="hljs-comment"># Example: Ideomatic Design</span>
<span class="hljs-comment"># Following PEP 8 style guide in CUPID code</span>
  <span class="hljs-keyword">def</span> <span class="hljs-title function_">greet</span>(<span class="hljs-params">name</span>):
      <span class="hljs-string">"""
      Greets the user by name.
      """</span>
      <span class="hljs-built_in">print</span>(<span class="hljs-string">f"Hello, <span class="hljs-subst">{name}</span>!"</span>)

  greet(<span class="hljs-string">"Alice"</span>)
</code></pre></div></foreignObject></g><g data-depth="3" data-path="1.6.9" transform="translate(883, 331.5)" class="markmap-node"><line x1="-1" x2="988" y1="287" y2="287" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #7d1a5f;" data-darkreader-inline-stroke=""></line><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="970" height="287"><div xmlns="http://www.w3.org/1999/xhtml">
<p data-lines="46,47">Predictable Behavior (Ensuring consistent and deterministic behavior of CUPID-based systems under various conditions).</p>
<pre><code class="language-python"><span class="hljs-comment"># Example: Predictable Behavior</span>
<span class="hljs-comment"># Writing unit tests for a CUPID component</span>
<span class="hljs-keyword">import</span> unittest
<span class="hljs-keyword">import</span> cupid

<span class="hljs-keyword">class</span> <span class="hljs-title class_">TestPredictableBehavior</span>(unittest.TestCase):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_addition</span>(<span class="hljs-params">self</span>):
        calculator = cupid.Calculator()
        result = calculator.add(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)
        self.assertEqual(result, <span class="hljs-number">5</span>)

<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:
    unittest.main()
</code></pre></div></foreignObject></g><g data-depth="3" data-path="1.6.8" transform="translate(883, 219.5)" class="markmap-node"><line x1="-1" x2="915" y1="107" y2="107" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #7d1a5f;" data-darkreader-inline-stroke=""></line><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="897" height="107"><div xmlns="http://www.w3.org/1999/xhtml">
<p data-lines="38,39">Unix Philosophy(Understanding the principles of Unix design, such as modularity, simplicity, and composability)</p>
<pre><code class="language-python"><span class="hljs-keyword">import</span> subprocess

output = subprocess.run([<span class="hljs-string">"ls"</span>, <span class="hljs-string">"-l"</span>], capture_output=<span class="hljs-literal">True</span>)
<span class="hljs-built_in">print</span>(output.stdout.decode())
</code></pre></div></foreignObject></g><g data-depth="3" data-path="1.6.7" transform="translate(883, -312.5)" class="markmap-node"><line x1="-1" x2="438" y1="527" y2="527" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #7d1a5f;" data-darkreader-inline-stroke=""></line><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="420" height="527"><div xmlns="http://www.w3.org/1999/xhtml">
<p data-lines="9,10">Composable Architecture</p>
<pre><code class="language-python"><span class="hljs-keyword">import</span> cupid

<span class="hljs-comment"># Define reusable components</span>
<span class="hljs-keyword">class</span> <span class="hljs-title class_">DatabaseComponent</span>(cupid.Component):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">setup</span>(<span class="hljs-params">self</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Setting up database component."</span>)

<span class="hljs-keyword">class</span> <span class="hljs-title class_">WebServerComponent</span>(cupid.Component):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">setup</span>(<span class="hljs-params">self</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Setting up web server component."</span>)

<span class="hljs-keyword">class</span> <span class="hljs-title class_">LoggingComponent</span>(cupid.Component):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">setup</span>(<span class="hljs-params">self</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Setting up logging component."</span>)

<span class="hljs-comment"># Create a CUPID system</span>
system = cupid.System()

<span class="hljs-comment"># Add components to the system</span>
system.add_component(DatabaseComponent())
system.add_component(WebServerComponent())
system.add_component(LoggingComponent())

<span class="hljs-comment"># Start the system</span>
system.start()
</code></pre></div></foreignObject></g><g data-depth="3" data-path="1.2.3" transform="translate(864, -355)" class="markmap-node"><line x1="-1" x2="143" y1="20" y2="20" stroke="rgb(255, 127, 14)" stroke-width="1.5" style="--darkreader-inline-stroke: #ae5200;" data-darkreader-inline-stroke=""></line><circle stroke-width="1.5" cx="141" cy="20" r="6" stroke="rgb(255, 127, 14)" fill="var(--markmap-circle-open-bg)" style="--darkreader-inline-fill: var(--darkreader-text--markmap-circle-open-bg, #e8e6e3); --darkreader-inline-stroke: #ff8a23;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="125" height="20"><div xmlns="http://www.w3.org/1999/xhtml">What is CUPID?</div></foreignObject></g><g data-depth="2" data-path="1.6" transform="translate(594, 335)" class="markmap-node"><line x1="-1" x2="211" y1="20" y2="20" stroke="rgb(227, 119, 194)" stroke-width="1.5" style="--darkreader-inline-stroke: #7d1a5f;" data-darkreader-inline-stroke=""></line><circle stroke-width="1.5" cx="209" cy="20" r="6" stroke="rgb(227, 119, 194)" fill="var(--markmap-circle-open-bg)" style="--darkreader-inline-fill: var(--darkreader-text--markmap-circle-open-bg, #e8e6e3); --darkreader-inline-stroke: #e376c1;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="193" height="20"><div xmlns="http://www.w3.org/1999/xhtml">Core Concepts of CUPID</div></foreignObject></g><g data-depth="2" data-path="1.2" transform="translate(594, -355)" class="markmap-node"><line x1="-1" x2="192" y1="20" y2="20" stroke="rgb(255, 127, 14)" stroke-width="1.5" style="--darkreader-inline-stroke: #ae5200;" data-darkreader-inline-stroke=""></line><circle stroke-width="1.5" cx="190" cy="20" r="6" stroke="rgb(255, 127, 14)" fill="var(--markmap-circle-open-bg)" style="--darkreader-inline-fill: var(--darkreader-text--markmap-circle-open-bg, #e8e6e3); --darkreader-inline-stroke: #ff8a23;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="174" height="20"><div xmlns="http://www.w3.org/1999/xhtml">Introduction to CUPID</div></foreignObject></g><g data-depth="1" data-path="1" transform="translate(0,-10)" class="markmap-node"><line x1="-1" x2="516" y1="20" y2="20" stroke="rgb(31, 119, 180)" stroke-width="2" style="--darkreader-inline-stroke: #1c6ca4;" data-darkreader-inline-stroke=""></line><circle stroke-width="1.5" cx="514" cy="20" r="6" stroke="rgb(31, 119, 180)" fill="var(--markmap-circle-open-bg)" style="--darkreader-inline-fill: var(--darkreader-text--markmap-circle-open-bg, #e8e6e3); --darkreader-inline-stroke: #55a8e2;" data-darkreader-inline-fill="" data-darkreader-inline-stroke=""></circle><foreignObject class="markmap-foreign" x="8" y="0" style="opacity: 1;" width="498" height="20"><div xmlns="http://www.w3.org/1999/xhtml">CUPID (Composable Unix Predictable Ideomatic Domain base)</div></foreignObject></g></g></svg>